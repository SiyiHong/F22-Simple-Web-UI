{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/columbia-all/columbia-all.component.ts","./src/app/columbia-all/columbia-all.component.html","./src/app/columbia_student/columbia-student-service.service.ts","./src/app/columbia_student/columbia-student.component.ts","./src/app/columbia_student/columbia-student.component.html","./src/app/imdb-title/imdb-title.component.ts","./src/app/imdb-title/imdb-title.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/navtest/navtest.component.ts","./src/app/navtest/navtest.component.html","./src/app/player/player.component.ts","./src/app/player/player.component.html","./src/app/player/player.ts","./src/app/player/players.service.ts","./src/app/snuffle/snuffle.component.ts","./src/app/snuffle/snuffle.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { UntypedFormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  title: '';\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<!--\n<nav>\n  <a routerLink=\"/people\">People</a>\n</nav>\n-->\n<app-navbar></app-navbar>\n<app-navtest></app-navtest>\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { ColumbiaStudentComponent } from './columbia_student/columbia-student.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {PlayerComponent} from './player/player.component';\nimport { SnuffleComponent } from './snuffle/snuffle.component';\nimport { NavtestComponent } from './navtest/navtest.component';\nimport {NgbNavModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ColumbiaAllComponent } from './columbia-all/columbia-all.component'\nimport { ImdbTitleComponent } from './imdb-title/imdb-title.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ColumbiaStudentComponent,\n    PlayerComponent,\n    SnuffleComponent,\n    NavtestComponent,\n    ColumbiaAllComponent,\n    ImdbTitleComponent\n  ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NgbNavModule\n    ],\n  providers: [\n    NavbarComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-columbia-all',\n  templateUrl: './columbia-all.component.html',\n  styleUrls: ['./columbia-all.component.css']\n})\nexport class ColumbiaAllComponent implements OnInit {\n\n  active = 1;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\n  <li [ngbNavItem]=\"1\">\n    <a ngbNavLink>Students</a>\n    <ng-template ngbNavContent>\n      <app-columbia-student></app-columbia-student>\n    </ng-template>\n  </li>\n  <!--\n  <li [ngbNavItem]=\"2\">\n    <a ngbNavLink>Titles</a>\n    <ng-template ngbNavContent>\n      <app-imdb-title></app-imdb-title>\n    </ng-template>\n  </li>\n  -->\n</ul>\n\n<div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ColumbiaStudent } from './columbia-student';\nimport { ColumbiaStudentRsp } from \"./columbia-student\";\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColumbiaStudentServiceService {\n\n  students: ColumbiaStudent[];\n  studentServiceUrl: string;\n\n  constructor(private http: HttpClient) {\n    // console.log('The URL = ' + window.location.href);\n    this.students = undefined;\n  }\n\n  getStudentServiceUrl(): string {\n    const theUrl = window.location.href;\n    let result: string;\n\n    // This is some seriously bad code.\n    // If you do this on a job interview, you did not learn this in my class.\n    if (theUrl.includes('amazonaws')) {\n      /* This can change over time */\n      result = undefined;\n    }\n    else {\n      result = 'http://127.0.0.1:5011/api/students/';\n    }\n    return result;\n  }\n\n\n  /** GET heroes from the server */\n  getStudents(studentUni): Observable<ColumbiaStudent> {\n    let theUrl: string;\n\n    theUrl = this.getStudentServiceUrl() + studentUni;\n    return this.http.get<ColumbiaStudent>(theUrl);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport { ColumbiaStudentServiceService } from './columbia-student-service.service';\nimport {ColumbiaStudent} from './columbia-student';\n\n@Component({\n  selector: 'app-columbia-student',\n  templateUrl: './columbia-student.component.html',\n  styleUrls: ['./columbia-student.component.css']\n})\nexport class ColumbiaStudentComponent implements OnInit {\n\n  toggleStudent: boolean;\n  studentName: string;\n  studentUni: string;\n  studentService: ColumbiaStudentServiceService;\n  studentsInfo: ColumbiaStudent[];\n\n  constructor(studentService: ColumbiaStudentServiceService) {\n    this.toggleStudent = false;\n    this.studentName = undefined;\n    this.studentUni = undefined;\n    this.studentService = studentService;\n    this.studentsInfo = undefined;\n  }\n\n  ngOnInit(): void {\n  }\n\n  toggleCard(cardId): void {\n    if (cardId == 'artist') {\n      this.toggleStudent = !this.toggleStudent;\n    }\n  }\n\n  setStudentInfo(theStudent: ColumbiaStudent): void {\n    console.log(\"Students = \\n\" + JSON.stringify(theStudent, null, 2));\n    this.studentsInfo = [theStudent];\n  }\n\n\n  onSomethingInput(e: Event) : void {\n    // console.log(\"Input = \", (<HTMLInputElement> e.target).value);\n    this.studentUni = (<HTMLInputElement> e.target).value;\n    if (this.studentUni.length > 2) {\n      this.studentService.getStudents(this.studentUni)\n        .subscribe((data) => this.setStudentInfo(data));\n    }\n  }\n\n  onLookup(): void {\n    if (this.studentUni.length > 3) {\n      this.studentService.getStudents(this.studentUni)\n        .subscribe((data) => this.setStudentInfo(data));\n    }\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\" style=\"width: 60rem\">\n        <div class=\"card-header\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <h3>Columbia Student Information</h3>\n            </div>\n            <div class=\"col\">\n              <button class=\"btn btn-link collapsed float-end\" data-toggle=\"collapse\" data-target=\"#collapse-L1\"\n                      aria-expanded=\"true\" aria-controls=\"collapse1\" (click)=\"toggleCard('artist')\">\n                <!-- Hello -->\n                <i class=\"fa fa-plus-square\" style=\"font-size:18px;color:black\"></i></button>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"toggleStudent\">Some information about\n          Columbia artists will go here!\n            <label>Type in an student's UNI: </label><input type=\"text\" class=\"form-control\"\n                                                    [(ngModel)]=\"studentUni\">\n          <p></p>\n            <button type=\"button\" (click)=\"onLookup()\" class=\"btn btn-primary\">Search</button>\n          <!-- You typed: <span *ngIf=\"artistName\"> \"{{ artistName }}\" </span> -->\n          <p></p>\n          <table class=\"table table-striped\">\n            <thead>\n            <tr>\n              <th scope=\"col\">Student ID</th>\n              <th scope=\"col\">Last name</th>\n              <th scope=\"col\">First name</th>\n              <th scope=\"col\">Middle name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">School code</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let p of studentsInfo; index as i\">\n              <td>\n                {{ p.guid }}\n              </td>\n              <td>{{p.last_name }}</td>\n              <td>{{ p.first_name }}</td>\n              <td>{{p.middle_name }}</td>\n              <td>{{ p.email }}</td>\n              <td>{{p.school_code }}</td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"card-footer\">That was cool!</div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-imdb-title',\n  templateUrl: './imdb-title.component.html',\n  styleUrls: ['./imdb-title.component.css']\n})\nexport class ImdbTitleComponent implements OnInit {\n\n  toggleImdbTitle: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleCard(cardId): void {\n    if (cardId == 'artist') {\n    }\n    if (cardId == 'title') {\n      this.toggleImdbTitle = !this.toggleImdbTitle;\n    }\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\" style=\"width: 60rem\">\n        <div class=\"card-header\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <h3>IMDB Title Information</h3>\n            </div>\n            <div class=\"col\">\n              <button class=\"btn btn-link collapsed float-end\" data-toggle=\"collapse\" data-target=\"#collapse-L1\"\n                      aria-expanded=\"true\" aria-controls=\"collapse1\" (click)=\"toggleCard('title')\">\n                <!-- Hello -->\n                <i class=\"fa fa-plus-square\" style=\"font-size:18px;color:black\"></i></button>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"toggleImdbTitle\">Some information about\n          <a href=\"https://www.imdb.com/interfaces/\">IMDB</a> artists will go here!\n          <label>Type in an artist's name: </label><input type=\"text\" class=\"form-control\"\n                                                          [(ngModel)]=\"artistName\">\n          <p></p>\n          <button type=\"button\" (click)=\"onLookup()\" class=\"btn btn-primary\">Search</button>\n          <!-- You typed: <span *ngIf=\"artistName\"> \"{{ artistName }}\" </span> -->\n          <p></p>\n          <table class=\"table table-striped\">\n            <thead>\n            <tr>\n              <th scope=\"col\">Primary Name</th>\n              <th scope=\"col\">Birth Year</th>\n              <th scope=\"col\">Death Year</th>\n              <th scope=\"col\">Primary Professions</th>\n              <th scope=\"col\">Known For Titles</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let p of artistInfo; index as i\">\n              <td>\n                {{ p.primaryName }}\n              </td>\n              <td>{{p.birthYear }}</td>\n              <td>{{ p.deathYear }}</td>\n              <td>{{ p.primaryProfession }}</td>\n              <td>{{ p.knownForTitles }}</td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"card-footer\">That was cool!</div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Injectable, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n\n@Injectable(\n  {providedIn: 'root'}\n)\n\n\nexport class NavbarComponent implements OnInit {\n\n  currentPage: string;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    // this.currentPage = 'Home';\n    // console.log('NavbarComponent: OnInit called.');\n  }\n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Link</a>\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Dropdown\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a class=\"dropdown-item\" href=\"#\">Action</a>\n          <a class=\"dropdown-item\" href=\"#\">Another action</a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n        </div>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n      </li>\n    </ul>\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n    </form>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navtest',\n  templateUrl: './navtest.component.html',\n  styleUrls: ['./navtest.component.css']\n})\nexport class NavtestComponent implements OnInit {\n\n  active = 1;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\n  <li [ngbNavItem]=1>\n    <a ngbNavLink>Snuffleupagus</a>\n    <ng-template ngbNavContent>\n      <app-snuffle></app-snuffle>\n    </ng-template>\n  </li>\n  <li [ngbNavItem]=\"2\">\n    <a ngbNavLink>Students</a>\n    <ng-template ngbNavContent>\n      <app-columbia-all></app-columbia-all>\n    </ng-template>\n  </li>\n  <li [ngbNavItem]=\"3\">\n    <a ngbNavLink>Lahman's Baseball</a>\n    <ng-template ngbNavContent>\n      <app-player-component></app-player-component>\n    </ng-template>\n  </li>\n</ul>\n\n<div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { PlayersService } from './players.service';\nimport { Player } from './player';\n\n\n@Component({\n  selector: 'app-player-component',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.css']\n})\nexport class PlayerComponent implements OnInit {\n  currentPlayer: Player;\n  allPlayers: Player[];\n  testInp : string;\n  showPlayers = false;\n\n  constructor(playerService: PlayersService) {\n    this.currentPlayer = playerService.getPlayer();\n    this.allPlayers = playerService.getAllPlayers();\n    this.testInp = undefined;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSomethingInput(e: Event) : void {\n    console.log(\"Input = \", (<HTMLInputElement> e.target).value);\n    this.testInp = (<HTMLInputElement> e.target).value;\n  }\n\n  togglePlayers(): void {\n    this.showPlayers = !this.showPlayers;\n  }\n\n}\n","\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\" style=\"width: 50rem;\">\n        <div class=\"card-header\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <h3>Player Information</h3>\n            </div>\n            <div class=\"col\">\n              <button class=\"btn btn-link collapsed float-end\" data-toggle=\"collapse\" data-target=\"#collapse-L1\"\n                      aria-expanded=\"true\" aria-controls=\"collapse1\" (click)=\"togglePlayers()\">\n                <i class=\"fa fa-plus-square\" style=\"font-size:18px;color:black\"></i></button>\n            </div>\n          </div>\n        </div>\n        <div id=\"collapse-L1\" *ngIf=\"showPlayers\">\n          <div class=\"card-body\">Some information about\n            <a href=\"http://www.seanlahman.com/baseball-archive/statistics/\">Lahman's 2020\n              Baseball Databases</a> People will go here!\n          </div>\n          <p>\n            For example, the player's last name could be: {{ currentPlayer.nameLast }}\n          </p>\n          <p>A list of players last names might be:</p>\n          <ol>\n            <li *ngFor=\"let p of allPlayers;\">{{p.nameLast }}</li>\n          </ol>\n          <p>And shown in a table.</p>\n\n          <table class=\"table table-striped\">\n            <thead>\n            <tr>\n              <th scope=\"col\">playerID</th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">First Name</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let p of allPlayers; index as i\">\n              <td>\n                {{ p.playerID }}\n              </td>\n              <td>{{p.nameLast }}</td>\n              <td>{{ p.nameFirst }}</td>\n            </tr>\n            </tbody>\n          </table>\n\n          <p>\n            At this point, it would be really cool to allow someone to enter a name or something else and:\n          </p>\n          <ol>\n            <li>Somehow calling an application or database.</li>\n            <li>Showing only the players that match the search criteria.</li>\n            <li>That might make an excellent homework or project assignment.</li>\n          </ol>\n        </div>\n\n        <div class=\"card\" *ngIf=\"showPlayers\">\n          <div class=\"card-body\">\n            <form>\n              <label>Type something ...</label><input type=\"text\" class=\"form-control\"\n                                                      (input)=\"onSomethingInput($event)\">\n            </form>\n            You typed: <span *ngIf=\"testInp\"> \"{{ testInp }}\" </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","export class Player {\n  playerID: string;\n  nameLast: string;\n  nameFirst: string;\n\n  constructor(playerID: string, nameLast: string, nameFirst: string) {\n    this.playerID = playerID;\n    this.nameLast = nameLast;\n    this.nameFirst = nameFirst;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Player } from './player';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayersService {\n  thePlayer: Player = null;\n  allPlayers:Player[] = new Array(3);\n\n  constructor() {\n    this.thePlayer = new Player(\"willite01\", \"Williams\", \"Ted\");\n\n    this.allPlayers[0] = new Player(\"willite01\", \"Williams\", \"Ted\");\n    this.allPlayers[1] = new Player('ortizda01', \"Ortiz\", \"David\");\n    this.allPlayers[2] = new Player('yastrca01', 'Yastrzemski', \"Carl\");\n\n  }\n\n  getAllPlayers(): Player[] {\n    return this.allPlayers\n  }\n\n  getPlayer(): Player {\n    return this.thePlayer;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-snuffle',\n  templateUrl: './snuffle.component.html',\n  styleUrls: ['./snuffle.component.css']\n})\nexport class SnuffleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\" style=\"width: 50rem;\">\n        <div class=\"card-header\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <h3 style=\"color: red;\">Ansys Snuffleupagus Program</h3>\n            </div>\n            <div class=\"col\">\n              <button class=\"btn btn-link collapsed float-end\" data-toggle=\"collapse\" data-target=\"#collapse-L1\"\n                      aria-expanded=\"true\" aria-controls=\"collapse1\">\n                <i class=\"fa fa-plus-square\" style=\"font-size:18px;color:black\"></i></button>\n            </div>\n          </div>\n        </div>\n        <div id=\"collapse-L1\">\n          <div class=\"card-body\">\n            <h5>So, You want to be in the Snuffleupagus Program?</h5>\n            <p>\n              <img src=\"assets/snuffle.png\">\n            </p>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}